<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy01Legs</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>knbdx = 0;
knbdy = 0;
knbMulti = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.paused == false)
{
    speed = 0;
    enemySpeed = 2; //The speed to move in pixels per tick
    image_speed = 0; 
    animSpeed = 0.25; //The speed to animate at
    view = 500;
    hitbox = 10;
    knockback = 3;
    knockbackMulti = 5;
    damage = 10;
    
    //if player is within view of enemy, follow
    if (point_distance(x, y, oPlayer.x, oPlayer.y) &lt; view) 
    {
        //look at player
        image_angle = point_direction(x,y,oPlayer.x, oPlayer.y);
        direction  = point_direction(x,y,oPlayer.x, oPlayer.y);
        
        image_speed = animSpeed;
        speed = enemySpeed;
    }
    else
    {
        if(image_index &lt; 6)
        {
            image_index = 6;
        }
        else
        {
            image_index = 0;
        }
    }
    
    //player within hitbox, knock them back, and move back half the amount
    if(point_distance(x, y, oPlayer.x, oPlayer.y) &lt; hitbox &amp;&amp; knbMulti == 0) 
    {
        knbdx = sign(x - oPlayer.x);
        knbdy = sign(y - oPlayer.y);
        knbMulti = knockbackMulti;
        health -= damage;
    }
    
    //knockback self and player - if no knockback needed, knbMulti will be 0
    //so no movement will occur
    x = x + (knockback * knbdx * knbMulti);
    y = y + (knockback * knbdx * knbMulti);
    oPlayer.x = oPlayer.x - (knockback * knbdx * knbMulti);
    oPlayer.y = oPlayer.y - (knockback * knbdy * knbMulti);
    
    if (knbMulti &gt; 0) { knbMulti -= 1; }
    
    //don't leave room
    x = clamp(x, 0, room_width - 10);
    y = clamp(y, 0, room_height - 10);
}
else
{
    speed = 0;
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
